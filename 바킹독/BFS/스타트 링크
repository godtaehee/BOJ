import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {

  static int f;
  static int s;
  static int g;
  static int u;
  static int d;

  static int[] map;
  static boolean[] check;

  public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    StringTokenizer st = new StringTokenizer(br.readLine());

    f = Integer.parseInt(st.nextToken());
    s = Integer.parseInt(st.nextToken());
    g = Integer.parseInt(st.nextToken());
    u = Integer.parseInt(st.nextToken());
    d = Integer.parseInt(st.nextToken());

    map = new int[f+1];
    check = new boolean[f+1];

    Queue<Integer> q = new LinkedList<>();
    q.add(s);
    check[s] = true;
    while (!q.isEmpty()) {

      int stair = q.poll();

      int up = stair + u;
      int down = stair - d;

      if (up <= f) {
        if (!check[up]) {
          map[up] = map[stair] + 1;
          check[up] = true;
          q.add(up);
        }
      }

      if (down >= 1) {
        if (!check[down]) {
          map[down] = map[stair] + 1;
          check[down] = true;
          q.add(down);
        }
      }
    }
    if (!check[g])
      System.out.println("use the stairs");
    else
      System.out.println(map[g]);
  }
}
